#
# DreamShell ISO Loader
# Build config
# (c) 2009-2020 SWAT
#

TARGET = 0x8ce00000
BUILD = build

# Features
#ENABLE_WRITE = 1
#ENABLE_CISO = 1
ENABLE_CDDA = 1
ENABLE_IRQ = 1

# Developing
#ENABLE_LOG = 1
#ENABLE_DEBUG = 1
#ENABLE_GDB = 1

TARGETPREFIX	= sh-elf
TARGETCC		= $(TARGETPREFIX)-gcc
TARGETOBJCOPY	= $(TARGETPREFIX)-objcopy
TARGETLD		= $(TARGETPREFIX)-ld
TARGETAS		= $(TARGETPREFIX)-as
TARGETSIZE		= $(TARGETPREFIX)-size
TARGETLDFLAGS	= -Wl,--gc-sections -Tshlelf.xc -nostartfiles -nostdlib -nodefaultlibs
TARGETCFLAGS	= -ml -m4-single-only -ffunction-sections -fdata-sections -ffreestanding \
					-fno-builtin -fno-strict-aliasing -fomit-frame-pointer \
					-Wall -std=c11 -Wextra -Werror \
					-DVERSION=\"0.6.12\" -DLOADER_ADDR=$(TARGET)

LIBS = -lgcc
INSTALL_PATH = ../../../build/firmware/isoldr

KOS_DIR   = ./kos
FATFS_DIR = ./fs/fat
NETFS_DIR = ./fs/net
CDFS_DIR  = ./fs/cd
DCLFS_DIR = ./fs/dcl

KOS = 	$(KOS_DIR)/src/memmove.o \
		$(KOS_DIR)/src/memcpy.o \
		$(KOS_DIR)/src/memset.o \
		$(KOS_DIR)/src/memcmp.o \
		$(KOS_DIR)/src/memchr.o \
		$(KOS_DIR)/src/strlen.o \
		$(KOS_DIR)/src/timer.o \
		$(KOS_DIR)/src/cache.o \
		$(KOS_DIR)/src/biosfont.o

NET = 	$(KOS_DIR)/src/strncmp.o \
		$(KOS_DIR)/net/core.o \
		$(KOS_DIR)/net/icmp.o \
		$(KOS_DIR)/net/udp.o \
		$(KOS_DIR)/net/arp.o \
		$(KOS_DIR)/src/g2bus.o \
		$(KOS_DIR)/src/broadband_adapter.o \
		$(KOS_DIR)/src/lan_adapter.o \
		$(NETFS_DIR)/commands.o \
		$(NETFS_DIR)/fs.o

FATFS = $(FATFS_DIR)/src/ff.o \
		 $(FATFS_DIR)/src/option/ccsbcs.o \
		 $(FATFS_DIR)/src/diskio.o \
		 $(FATFS_DIR)/fs.o
		 
EXPT =  exception-lowlevel.o exception.o asic.o ubc.o
CDDA =  pcm_split.o cdda.o

SD  =   $(FATFS) ./dev/sd/spi.o ./dev/sd/sd.o
IDE =   $(FATFS) ./dev/ide/ide.o
CD  =   $(CDFS_DIR)/cdfs.o ./dev/ide/ide.o
DCL =   $(DCLFS_DIR)/dcload-syscall.o $(DCLFS_DIR)/fs.o

MAIN =  startup.os main.o syscalls.o reader.o mmu.o utils.o \
		 descramble.o gdc_syscall.o menu_syscall.o sys_syscall.o \
		 bfont_syscall.o flash_syscall.o
		 
LOBJECTS = $(MAIN) $(KOS)
TARGETCFLAGS += -I$(KOS_DIR) -I./include -I./kos -I../../../include

SD_CFLAGS  = -DDEV_NAME=\"SDCard\" -DDEV_TYPE_SD=1 -D_FS_ASYNC=1 -DNO_SD_INIT=1  \
				-I$(FATFS_DIR)/include -I./dev/sd

IDE_CFLAGS = -DDEV_NAME=\"IDE\" -DDEV_TYPE_IDE=1 -D_FS_ASYNC=1 \
				-I$(FATFS_DIR)/include -I./dev

CD_CFLAGS  = -DDEV_NAME=\"GD-ROM\" -DDEV_TYPE_GD=1 -D_FS_ASYNC=1 \
				-I$(CDFS_DIR)/include -I./dev #-DDEV_TYPE_EMU

DCL_CFLAGS = -DDEV_NAME=\"DC-LOAD\" -DDEV_TYPE_DCL=1 -I$(DCLFS_DIR)/include
NET_CFLAGS = -DDEV_NAME=\"Network\" -DDEV_TYPE_NET=1 -I$(NETFS_DIR)/include

ifdef ENABLE_WRITE
TARGETCFLAGS += -D_FS_READONLY=0
else
TARGETCFLAGS += -D_FS_READONLY=1
endif

ifdef ENABLE_CDDA
TARGETCFLAGS += -DHAVE_CDDA=1
LOBJECTS += $(CDDA)
endif

ifdef ENABLE_CISO
TARGETCFLAGS += -I./include/minilzo -DHAVE_LZO=1 \
				-DMINILZO_CFG_SKIP_LZO_PTR \
				-DMINILZO_CFG_SKIP_LZO_STRING \
				-DMINILZO_CFG_SKIP_LZO_UTIL \
				-DMINILZO_CFG_SKIP_LZO1X_COMPRESS \
				-DMINILZO_CFG_SKIP_LZO1X_DECOMPRESS_SAFE
LOBJECTS += minilzo.o
endif

ifdef ENABLE_IRQ
TARGETCFLAGS += -DHAVE_EXPT=1 -DNO_ASIC_LT=1
LOBJECTS += $(EXPT)
endif

ifdef ENABLE_LOG
TARGETCFLAGS += -DLOG
LOBJECTS += $(KOS_DIR)/src/printf.o
LOBJECTS += $(KOS_DIR)/src/scif.o
SD_CFLAGS += -DLOG_DCL
SD += $(DCLFS_DIR)/dcload-syscall.o
else
TARGETCFLAGS += -Wa,--isa=sh4a-nofpu
endif

ifdef ENABLE_DEBUG
TARGETCFLAGS += -DDEBUG
endif

ifdef ENABLE_GDB
TARGETCFLAGS += -DUSE_GDB
LOBJECTS += gdb.o
ifndef ENABLE_LOG
LOBJECTS += $(KOS_DIR)/src/scif.o
endif
endif

%.bin: %.elf
	$(TARGETOBJCOPY) -O binary $< $@
#%.elf: $(LOBJECTS)
#	$(TARGETCC) $(TARGETCFLAGS) $(TARGETLDFLAGS) -o $@ $(LOBJECTS) $(LIBS)
%.on: %.c
	$(TARGETCC) $(TARGETCFLAGS) $(INCLUDE) -c $< -o $@
%.o: %.c
	$(TARGETCC) $(TARGETCFLAGS) -Os $(INCLUDE) -c $< -o $@
%.o2: %.c
	$(TARGETCC) $(TARGETCFLAGS) -O2 $(INCLUDE) -c $< -o $@
%.o3: %.c
	$(TARGETCC) $(TARGETCFLAGS) -O3 $(INCLUDE) -c $< -o $@
%.of: %.c
	$(TARGETCC) $(TARGETCFLAGS) -Ofast $(INCLUDE) -c $< -o $@
%.o: %.s
	$(TARGETCC) $(TARGETCFLAGS) $(INCLUDE) -o $@ -c $<
%.o: %.S
	$(TARGETCC) $(TARGETCFLAGS) $(INCLUDE) -o $@ -c $<
%.os: %.s
	$(TARGETAS) --isa=sh4 -little -o $@ -c $<
